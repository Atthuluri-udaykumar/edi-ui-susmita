/*
 * Created on 2022-12-08 ( Time 13:18:11 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
import { describe, expect, test, beforeEach, jest } from '@jest/globals';
import { Container } from 'inversify';
import 'reflect-metadata';
import { IAuthenticationController } from '../../src/controllers/interfaces/authentication-controller.interface';
import { AuthenticationController } from '../../src/controllers/authentication.controller';
import { IAuthenticationService } from '../../src/services/interfaces/authentication-service.interface';
import { AuthenticationServiceMock } from '../../__mocks__/services/authentication-service.mock';
import { AuthenticationRouter } from '../../src/routes/authentication.router';
import { Symbols } from '../../src/utils/types';

describe('Test authentication Router', () => {

    let container: Container;
    let router: AuthenticationRouter;
    const testRecord = {emplerId:1, ein:'', corpName:'', telNum:'', line1Adr:'', line2Adr:'', line3Adr:'', line4Adr:'', cityName:'', stateId:1, zip5Cd:'', zipPlus4Cd:'', recAddTs:'2000-10-10 10:10:10', recAddUserName:'', recUpdtTs:'2000-10-10 10:10:10', recUpdtUserName:'', einLockSw:''};

    beforeEach(() => {
        container = new Container();
        container.bind<IAuthenticationService>(Symbols.IAuthenticationService).to(AuthenticationServiceMock);
        container.bind<IAuthenticationController>(Symbols.IAuthenticationController).to(AuthenticationController);
        container.bind<AuthenticationRouter>(AuthenticationRouter).to(AuthenticationRouter);
		
		router = container.resolve(AuthenticationRouter);
    });

    test('Routes should initialize successfully', () => {
        expect(router.router.stack.length > 0).toBeTruthy();
    });

    
});

