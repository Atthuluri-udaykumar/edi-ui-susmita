/*
 * Created on 2022-12-08 ( Time 13:18:11 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
import { describe, expect, test, beforeEach, jest } from '@jest/globals';
import { Container } from 'inversify';
import 'reflect-metadata';
import { IBulletinBoardController } from '../../src/controllers/interfaces/bulletinboard-controller.interface';
import { BulletinBoardController } from '../../src/controllers/bulletinboard.controller';
import { IBulletinBoardService } from '../../src/services/interfaces/bulletinboard-service.interface';
import { BulletinBoardService } from '../../src/services/bulletinboard-service';
import { BulletinBoardRouter } from '../../src/routes/bulletinboard.router';
import { Symbols } from '../../src/utils/types';
import { IBulletinBoardRepository } from '../../src/repositories/interfaces/bulletinboard-repository.interface';
import { BulletinBoardMockRepository } from '../../src/repositories/bulletinboard-mock-respository';
import { TranslatorService } from '../../src/services/translator-service';
import { MirEdiCntntTbl } from '../../src/models/miredicntnttbl.model';
import { EdiMessage } from '../../src/models/edi-message.model';



describe('Test Translator Service', () => {

    beforeEach(() => {
    });

    test('translate ediMessage invalid topicTxt', () => {
        const testEdiMessage = {application: 'test', message:'test message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( testEdiMessage);

        expect(result.ediCntntTopcTxt).toBe('');
        expect(result.ediCntntTxt).toBe('test message');

    });

    test('translate ediMessage MSPRP topicTxt', () => {
        const ediAppMessage = {application: 'MSPRP', message:'MSPRP message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( ediAppMessage);

        expect(result.ediCntntTopcTxt).toBe('MRPTOPIC');
        expect(result.ediCntntTxt).toBe('MSPRP message');

    });

    
    test('translate ediMessage ECRS topicTxt', () => {
        const ediAppMessage = {application: 'ECRS', message:'Test message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( ediAppMessage);

        expect(result.ediCntntTopcTxt).toBe('ECSTOPIC');
        expect(result.ediCntntTxt).toBe('Test message');

    });


    test('translate ediMessage CRCP topicTxt', () => {
        const ediAppMessage = {application: 'CRCP', message:'Test message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( ediAppMessage);

        expect(result.ediCntntTopcTxt).toBe('GHPTOPIC');
        expect(result.ediCntntTxt).toBe('Test message');

    });

    test('translate ediMessage WCMSAP topicTxt', () => {
        const ediAppMessage = {application: 'WCMSAP', message:'Test message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( ediAppMessage);

        expect(result.ediCntntTopcTxt).toBe('WCSTOPIC');
        expect(result.ediCntntTxt).toBe('Test message');

    });

    test('translate ediMessage S111 topicTxt', () => {
        const ediAppMessage = {application: 'Section 111', message:'Test message' };
        const result: MirEdiCntntTbl = TranslatorService.translateToMirEdiCntntTbl( ediAppMessage);

        expect(result.ediCntntTopcTxt).toBe('MRATOPIC');
        expect(result.ediCntntTxt).toBe('Test message');

    });

    test('translate mirEdiCntntTbl invalid topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'test', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('');
        expect(result.message).toBe('Test message');

    });

    test('translate mirEdiCntntTbl MRPTOPIC topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'MRPTOPIC', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('MSPRP');
        expect(result.message).toBe('Test message');

    });

    test('translate mirEdiCntntTbl ECSTOPIC topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'ECSTOPIC', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('ECRS');
        expect(result.message).toBe('Test message');

    });

    test('translate mirEdiCntntTbl GHPTOPIC topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'GHPTOPIC', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('CRCP');
        expect(result.message).toBe('Test message');

    });

    test('translate mirEdiCntntTbl WCSTOPIC topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'WCSTOPIC', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('WCMSAP');
        expect(result.message).toBe('Test message');

    });

    test('translate mirEdiCntntTbl S111 topicTxt', () => {
        const mir = {ediCntntTopcTxt: 'MRATOPIC', ediCntntTxt:'Test message' };
        const result: EdiMessage = TranslatorService.translateToEdiMessage(mir);

        expect(result.application).toBe('Section 111');
        expect(result.message).toBe('Test message');

    });


});

