/*
 * Created on 2022-11-15 ( Time 13:29:21 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */

            

import express from 'express';
import { body } from 'express-validator';
import { inject, injectable } from 'inversify';
import { jwtValidator } from '../authentication/jwt-validator';
import { IBulletinBoardController } from '../controllers/interfaces/bulletinboard-controller.interface';
import { EdiMessage } from '../models/edi-message.model';
import { loggable } from '../utils/logger.util';
import { ModelUtil } from '../utils/model.util';
import { Symbols } from '../utils/types';
import { CustomRouter } from './interfaces/custom-router.interface';

@injectable()
export class BulletinBoardRouter implements CustomRouter {
    public path = '/bulletinboards';
    public router = express.Router();

    constructor(  @inject(Symbols.IBulletinBoardController) private controller: IBulletinBoardController) {
        this.initializeRoutes();
    }

    @loggable()
    private initializeRoutes(): void {

		this.router.get('/', [jwtValidator], this.controller.getLatestBulletinBoardMessages.bind(this.controller));

        this.router.post('/', [jwtValidator], this.controller.updateBulletinBoardMessages.bind(this.controller));
    }


    validateBulletinBoardMessages(value: any): boolean {

        if( value instanceof Array) {
            let messages: string[] = [];
            value.forEach( (element) => {
                const message = ModelUtil.isValidInstance(element, EdiMessage);
                if (!message) {
                    return;
                }
                messages.push(message);
            });
            if( messages.length > 0) {
                throw new Error(messages.toString());
            } else {
                return true;
            }
        }
        throw new Error("Invalid bulletin board message(s) received");
    }
}
